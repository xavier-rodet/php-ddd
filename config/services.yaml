# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
  # default configuration for services in *this* file
  _defaults:
    autowire: true # Automatically injects dependencies in your services.
    autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

  # this config only applies to the services created by this file
  # see: https://symfony.com/doc/current/service_container/tags.html#autoconfiguring-tags
  _instanceof:
    # services whose classes are instances of CustomInterface will be tagged automatically
    SharedKernel\Application\Command\CommandHandlerInterface:
      tags: ['ddd.command_handler']
    # App\SharedKernel\Application\Query\QueryHandlerInterface:
    #   tags: ['ddd.query_handler']
    SharedKernel\Application\Event\EventHandlerInterface:
      tags: ['ddd.event_handler']

  # # makes classes in src/ available to be used as services
  # # this creates a service per class whose id is the fully-qualified class name
  PhpExtension\:
    resource: '../src/PhpExtension/'

  SharedKernel\:
    resource: '../src/SharedKernel/src/'

  Account\:
    resource: '../src/Account/src/'
  # # controllers are imported separately to make sure services can be injected
  # # as action arguments even if you don't extend any base controller class
  # Account\Presentation\Api\:
  #   resource: '../src/Account/src/Presentation/Api'
  #   tags: ['controller.service_arguments']

  # App\Game\Presentation\Controller\:
  #   resource: '../src/Game/Presentation/Controller'
  #   tags: ['controller.service_arguments']

  # App\Store\Presentation\Controller\:
  #   resource: '../src/Store/Presentation/Controller'
  #   tags: ['controller.service_arguments']

  # add more service definitions when explicit configuration is needed
  # please note that last definitions always *replace* previous ones
  SharedKernel\Application\Command\CommandBusInterface:
    factory: 'SharedKernel\Application\Command\CommandBusFactory::build'
    arguments: [!tagged ddd.command_handler]
    lazy: true

  # App\SharedKernel\Application\Query\QueryBusInterface:
  #   factory: 'App\SharedKernel\Application\Query\QueryBusFactory::build'
  #   arguments: [!tagged ddd.query_handler]
  #   lazy: true

  SharedKernel\Application\Event\EventBusInterface:
    factory: 'SharedKernel\Application\Event\EventBusFactory::build'
    arguments: [!tagged ddd.event_handler]
    lazy: true
